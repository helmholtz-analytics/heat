name: Get latest PyTorch release version
on:
  workflow_dispatch:
  schedule:
    - cron:  '0 3 * * 1-5'
env:
  working_branch: workflows/new-pytorch-release
permissions:
  contents: write
jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GHACTIONS }}
          ref: 'release/1.2.x'
      - name: Fetch PyTorch release version
        run: |
          curl -sL https://api.github.com/repos/pytorch/pytorch/releases/latest | \
          jq -r ".tag_name" | tr -d 'v' > .github/pytorch-release-versions/pytorch-latest.txt
      - name: Check if file has been modified
        id: git-check
        run: echo "::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")"
      - name: Delete working branch if it already exists
        if: git show-ref --verify --quiet refs/heads/${{ env.working_branch }}
        run: |
          git push --delete origin ${{ env.working_branch }}
          git branch -d ${{ env.working_branch }}
      - name: Commit latest PyTorch release version to new branch
        if: ${{ steps.git-check.outputs.modified == 'true' }}
        run: |
          git checkout -b  ${{ env.working_branch }} # create local branch from reference
          echo "new=$(<.github/pytorch-release-versions/pytorch-latest.txt)" >> $GITHUB_ENV
          git config --global user.name 'ClaudiaComito'
          git config --global user.email 'c.comito@fz-juelich.de@users.noreply.github.com'
          git commit -am "New PyTorch release ${{ env.new }}"
          git push --set-upstream origin ${{ env.working_branch }}
